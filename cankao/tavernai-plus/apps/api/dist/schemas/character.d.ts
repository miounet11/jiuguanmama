import { z } from 'zod';
export declare const createCharacterSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    personality: z.ZodOptional<z.ZodString>;
    backstory: z.ZodOptional<z.ZodString>;
    speakingStyle: z.ZodOptional<z.ZodString>;
    scenario: z.ZodOptional<z.ZodString>;
    firstMessage: z.ZodOptional<z.ZodString>;
    systemPrompt: z.ZodOptional<z.ZodString>;
    exampleDialogs: z.ZodOptional<z.ZodString>;
    avatar: z.ZodOptional<z.ZodString>;
    coverImage: z.ZodOptional<z.ZodString>;
    category: z.ZodDefault<z.ZodString>;
    tags: z.ZodDefault<z.ZodString>;
    language: z.ZodDefault<z.ZodString>;
    model: z.ZodDefault<z.ZodString>;
    temperature: z.ZodDefault<z.ZodNumber>;
    maxTokens: z.ZodDefault<z.ZodNumber>;
    isPublic: z.ZodDefault<z.ZodBoolean>;
    isNSFW: z.ZodDefault<z.ZodBoolean>;
    mbtiType: z.ZodOptional<z.ZodString>;
    backgroundImage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    category: string;
    tags: string;
    language: string;
    model: string;
    temperature: number;
    maxTokens: number;
    isPublic: boolean;
    isNSFW: boolean;
    description?: string | undefined;
    personality?: string | undefined;
    backstory?: string | undefined;
    speakingStyle?: string | undefined;
    scenario?: string | undefined;
    firstMessage?: string | undefined;
    systemPrompt?: string | undefined;
    exampleDialogs?: string | undefined;
    avatar?: string | undefined;
    coverImage?: string | undefined;
    mbtiType?: string | undefined;
    backgroundImage?: string | undefined;
}, {
    name: string;
    description?: string | undefined;
    personality?: string | undefined;
    backstory?: string | undefined;
    speakingStyle?: string | undefined;
    scenario?: string | undefined;
    firstMessage?: string | undefined;
    systemPrompt?: string | undefined;
    exampleDialogs?: string | undefined;
    avatar?: string | undefined;
    coverImage?: string | undefined;
    category?: string | undefined;
    tags?: string | undefined;
    language?: string | undefined;
    model?: string | undefined;
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    isPublic?: boolean | undefined;
    isNSFW?: boolean | undefined;
    mbtiType?: string | undefined;
    backgroundImage?: string | undefined;
}>;
export declare const updateCharacterSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    personality: z.ZodOptional<z.ZodString>;
    backstory: z.ZodOptional<z.ZodString>;
    speakingStyle: z.ZodOptional<z.ZodString>;
    scenario: z.ZodOptional<z.ZodString>;
    firstMessage: z.ZodOptional<z.ZodString>;
    systemPrompt: z.ZodOptional<z.ZodString>;
    exampleDialogs: z.ZodOptional<z.ZodString>;
    avatar: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    coverImage: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    category: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodString>;
    language: z.ZodOptional<z.ZodString>;
    model: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    isPublic: z.ZodOptional<z.ZodBoolean>;
    isNSFW: z.ZodOptional<z.ZodBoolean>;
    mbtiType: z.ZodOptional<z.ZodString>;
    backgroundImage: z.ZodNullable<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    description?: string | undefined;
    personality?: string | undefined;
    backstory?: string | undefined;
    speakingStyle?: string | undefined;
    scenario?: string | undefined;
    firstMessage?: string | undefined;
    systemPrompt?: string | undefined;
    exampleDialogs?: string | undefined;
    avatar?: string | null | undefined;
    coverImage?: string | null | undefined;
    category?: string | undefined;
    tags?: string | undefined;
    language?: string | undefined;
    model?: string | undefined;
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    isPublic?: boolean | undefined;
    isNSFW?: boolean | undefined;
    mbtiType?: string | undefined;
    backgroundImage?: string | null | undefined;
}, {
    name?: string | undefined;
    description?: string | undefined;
    personality?: string | undefined;
    backstory?: string | undefined;
    speakingStyle?: string | undefined;
    scenario?: string | undefined;
    firstMessage?: string | undefined;
    systemPrompt?: string | undefined;
    exampleDialogs?: string | undefined;
    avatar?: string | null | undefined;
    coverImage?: string | null | undefined;
    category?: string | undefined;
    tags?: string | undefined;
    language?: string | undefined;
    model?: string | undefined;
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    isPublic?: boolean | undefined;
    isNSFW?: boolean | undefined;
    mbtiType?: string | undefined;
    backgroundImage?: string | null | undefined;
}>;
export declare const rateCharacterSchema: z.ZodObject<{
    rating: z.ZodNumber;
    comment: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    rating: number;
    comment?: string | undefined;
}, {
    rating: number;
    comment?: string | undefined;
}>;
export declare const characterQuerySchema: z.ZodObject<{
    page: z.ZodDefault<z.ZodEffects<z.ZodEffects<z.ZodString, number, string>, number, string>>;
    limit: z.ZodDefault<z.ZodEffects<z.ZodEffects<z.ZodString, number, string>, number, string>>;
    sort: z.ZodDefault<z.ZodEnum<["created", "rating", "popular", "chatCount", "name"]>>;
    search: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    sort: "name" | "rating" | "created" | "popular" | "chatCount";
    limit: number;
    page: number;
    category?: string | undefined;
    tags?: string[] | undefined;
    search?: string | undefined;
}, {
    sort?: "name" | "rating" | "created" | "popular" | "chatCount" | undefined;
    limit?: string | undefined;
    category?: string | undefined;
    tags?: string[] | undefined;
    page?: string | undefined;
    search?: string | undefined;
}>;
//# sourceMappingURL=character.d.ts.map